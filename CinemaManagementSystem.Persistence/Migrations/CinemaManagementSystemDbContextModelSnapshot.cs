// <auto-generated />
using System;
using CinemaManagementSystem.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaManagementSystem.Persistence.Migrations
{
    [DbContext(typeof(CinemaManagementSystemDbContext))]
    partial class CinemaManagementSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Actor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbb49f8e-a8d0-4ecd-87aa-d4dee2e0241c"),
                            BirthDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(5400),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(5790),
                            Description = "Xinh gai, code gioi :))",
                            Gender = "Female",
                            ImageUrl = "",
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(5800),
                            Name = "Cao Quynh Anh"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5a362e7-2726-401d-bf1c-7c97d85173fd"),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 516, DateTimeKind.Local).AddTicks(4010),
                            Description = "Founded in 1971, Lucasfilm is one of the world's leading entertainment companies and home to the legendary Star Wars and Indiana Jones franchises.",
                            ImageUrl = "/o86DbpburjxrqAzEDhXZcyE8pDb.png",
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(2280),
                            Name = "Lucasfilm Ltd."
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e52ff8e0-4254-4d90-9f5f-75e7d4861f24"),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4900),
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4900),
                            Name = "Phim Hành Động"
                        },
                        new
                        {
                            Id = new Guid("40ea4241-7fff-40e5-b488-638dc98d5086"),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4920),
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4920),
                            Name = "Phim Phiêu Lưu"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeRequired")
                        .HasColumnType("int");

                    b.Property<string>("BackDropUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a3ff39f-cde5-4585-b097-6518556f011f"),
                            AgeRequired = 8,
                            BackDropUrl = "/4XM8DUTQb3lhLemJC51Jx4a2EuA.jpg",
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4600),
                            Description = "Dom Toretto và gia đình anh ta là mục tiêu của đứa con trai đầy thù hận của trùm ma túy Hernan Reyes.",
                            ImageUrl = "/brZzXXQ8GuzlAdu4TJxjhC8ebBL.jpg",
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4600),
                            ReleaseDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(4460),
                            Title = "Fast & Furious X"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.MovieActor", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActor");

                    b.HasData(
                        new
                        {
                            MovieId = new Guid("9a3ff39f-cde5-4585-b097-6518556f011f"),
                            ActorId = new Guid("dbb49f8e-a8d0-4ecd-87aa-d4dee2e0241c")
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.MovieCompany", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("MovieCompany");

                    b.HasData(
                        new
                        {
                            MovieId = new Guid("9a3ff39f-cde5-4585-b097-6518556f011f"),
                            CompanyId = new Guid("c5a362e7-2726-401d-bf1c-7c97d85173fd")
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.MovieGenre", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenre");

                    b.HasData(
                        new
                        {
                            MovieId = new Guid("9a3ff39f-cde5-4585-b097-6518556f011f"),
                            GenreId = new Guid("e52ff8e0-4254-4d90-9f5f-75e7d4861f24")
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Rate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Rate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("454dccc4-d67c-487d-8d1d-f0341c0b7240"),
                            Comment = "Web xịn, phim hay, toàn trai xinh gái đẹp, recommend nha mọi ngừi",
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(6730),
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(6730),
                            MovieId = new Guid("9a3ff39f-cde5-4585-b097-6518556f011f"),
                            Rating = 9.5,
                            UserId = new Guid("00000001-0001-0001-0101-010101010101")
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique()
                        .HasFilter("[CompanyId] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000001-0001-0001-0101-010101010101"),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(3060),
                            Firstname = "System",
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(3060),
                            Lastname = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("00000002-0002-0002-0202-020202020202"),
                            CompanyId = new Guid("c5a362e7-2726-401d-bf1c-7c97d85173fd"),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(3670),
                            Firstname = "System",
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(3670),
                            Lastname = "Publisher"
                        },
                        new
                        {
                            Id = new Guid("00000003-0003-0003-0303-030303030303"),
                            CreatedBy = "Administrator",
                            DateCreated = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(3670),
                            Firstname = "System",
                            LastModifiedBy = "Administrator",
                            LastModifiedDate = new DateTime(2023, 7, 9, 22, 7, 3, 525, DateTimeKind.Local).AddTicks(3670),
                            Lastname = "User"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.MovieActor", b =>
                {
                    b.HasOne("CinemaManagementSystem.Domain.Entities.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagementSystem.Domain.Entities.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.MovieCompany", b =>
                {
                    b.HasOne("CinemaManagementSystem.Domain.Entities.Company", "Company")
                        .WithMany("MovieCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagementSystem.Domain.Entities.Movie", "Movie")
                        .WithMany("MovieCompanies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.MovieGenre", b =>
                {
                    b.HasOne("CinemaManagementSystem.Domain.Entities.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagementSystem.Domain.Entities.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Rate", b =>
                {
                    b.HasOne("CinemaManagementSystem.Domain.Entities.Movie", "Movie")
                        .WithMany("Rates")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagementSystem.Domain.Entities.User", "User")
                        .WithMany("Rates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.User", b =>
                {
                    b.HasOne("CinemaManagementSystem.Domain.Entities.Company", "Company")
                        .WithOne("User")
                        .HasForeignKey("CinemaManagementSystem.Domain.Entities.User", "CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Company", b =>
                {
                    b.Navigation("MovieCompanies");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.Movie", b =>
                {
                    b.Navigation("MovieActors");

                    b.Navigation("MovieCompanies");

                    b.Navigation("MovieGenres");

                    b.Navigation("Rates");
                });

            modelBuilder.Entity("CinemaManagementSystem.Domain.Entities.User", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
